{"version":3,"sources":["api/index.js","App.js","index.js"],"names":["url","getData","country","a","changeURL","axios","get","data","changedData","confirmed","recovered","deaths","lastUpdate","App","useState","setData","useEffect","newData","console","log","retrieveData","Jumbotron","Container","length","toUpperCase","Date","toDateString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAIMA,G,MAAM,kCAECC,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DAEfC,EAAYJ,EAEZE,GAAoB,UAATA,IACXE,EAAS,UAAMJ,EAAN,sBAAuBE,IALjB,kBAUQG,IAAMC,IAAIF,GAVlB,uBAUPG,EAVO,EAUPA,KAEFC,EAAc,CAChBC,UAAWF,EAAKE,UAChBC,UAAWH,EAAKG,UAChBC,OAAQJ,EAAKI,OACbC,WAAYL,EAAKK,YAhBN,kBAmBRJ,GAnBQ,2HAAH,sDC2CLK,MA7Cf,WAAgB,IAAD,EAEWC,mBAAS,IAFpB,mBAENP,EAFM,KAEAQ,EAFA,OAGiBD,mBAAS,IAH1B,mBAGNZ,EAHM,KA+Bb,OA/Ba,KAKbc,qBAAU,WAAM,4CAEd,4BAAAb,EAAA,sEACwBF,IADxB,OACQgB,EADR,OAEEC,QAAQC,IAAI,WAAYF,GACxBF,EAAQE,GAHV,4CAFc,uBAAC,WAAD,wBAOdG,KACC,IAmBD,6BACE,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,4BAZkB,GAAlBpB,EAAQqB,OACF,eAEArB,EAAQsB,cAAgB,UAUpC,2BAAI,6CAAsB,IAAIC,KAAKlB,EAAKK,YAAYc,eAApD,QCpCFC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d954c5aa.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport \"regenerator-runtime/runtime.js\";\r\n\r\n\r\nconst url = \"https://covid19.mathdro.id/api\"\r\n\r\nexport const getData = async (country) => {\r\n\r\n    let changeURL = url;\r\n\r\n    if (country && country!=\"global\" ){\r\n        changeURL = `${url}/countries/${country}`\r\n    }\r\n\r\n\r\n    try {\r\n        const { data } = await axios.get(changeURL);\r\n\r\n        const changedData = {\r\n            confirmed: data.confirmed,\r\n            recovered: data.recovered,\r\n            deaths: data.deaths,\r\n            lastUpdate: data.lastUpdate,\r\n        }\r\n\r\n        return changedData;\r\n    } catch (e) {\r\n        return e;\r\n    }\r\n}\r\n\r\nexport const fetchDaily = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n        return data.map(({ confirmed, deaths, reportDate: date }) =>\r\n            ({\r\n                confirmed: confirmed.total,\r\n                deaths: deaths.total,\r\n                date\r\n            }));\r\n\r\n    } catch (e) {\r\n        return e;\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`)\r\n       return countries.map((country) => country.name )\r\n    } catch (e) {\r\n        console.log(e)\r\n        return e;\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\nimport { Container , Jumbotron } from 'react-bootstrap';\nimport { getData } from './api'\n\nfunction App() {\n\n  const [data, setData] = useState({});\n  const [country, setCountry] = useState('');\n\n  useEffect(() => {\n\n    async function retrieveData() {\n      const newData = await getData();\n      console.log(\"data is \", newData)\n      setData(newData);\n    }\n    retrieveData();\n  }, [])\n\n  const retrieveCountry = async (newCountry) => {\n    const fetchedCountries = await getData(newCountry);\n\n    setData(fetchedCountries);\n    setCountry(newCountry);\n  }\n\n  const changeCountryString = () => {\n    if (country.length == 0)\n      return (\"GLOBAL STATS\");\n    else\n      return (country.toUpperCase() + \" STATS\")\n  }\n\n\n\n  return (\n    <div>\n      <Jumbotron/>\n      <Container>\n        <h4 >{changeCountryString()}</h4>\n  <p ><i>Last update:  </i>{new Date(data.lastUpdate).toDateString()} </p>\n        {/* <Countries setCountry={this.setCountry} />\n        <Cards data={this.state.data} />\n        <Chart data={this.state.data} country={this.state.country} /> */}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}